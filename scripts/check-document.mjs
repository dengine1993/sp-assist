#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/check-document.mjs
 */

import dotenv from 'dotenv';

dotenv.config();

const SUPABASE_URL = process.env.VITE_SUPABASE_URL;
const SUPABASE_KEY = process.env.VITE_SUPABASE_PUBLISHABLE_KEY;
const DOCUMENT_NAME = 'sp-60-13330-2020';

if (!SUPABASE_URL || !SUPABASE_KEY) {
  console.error('‚ùå –û—à–∏–±–∫–∞: VITE_SUPABASE_URL –∏ VITE_SUPABASE_PUBLISHABLE_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ');
  process.exit(1);
}

async function checkDocument() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
  
  try {
    const response = await fetch(
      `${SUPABASE_URL}/rest/v1/document_chunks?document_name=eq.${DOCUMENT_NAME}&select=count`,
      {
        method: 'HEAD',
        headers: {
          'apikey': SUPABASE_KEY,
          'Authorization': `Bearer ${SUPABASE_KEY}`,
        },
      }
    );

    const contentRange = response.headers.get('content-range');
    
    if (!contentRange) {
      console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ');
      console.log('   –í–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–±–ª–∏—Ü–∞ document_chunks –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      return;
    }

    // Content-Range format: "0-24/142" where 142 is total count
    const totalMatch = contentRange.match(/\/(\d+)/);
    const total = totalMatch ? parseInt(totalMatch[1], 10) : 0;

    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:`);
    console.log(`   –î–æ–∫—É–º–µ–Ω—Ç: ${DOCUMENT_NAME}`);
    console.log(`   –ù–∞–π–¥–µ–Ω–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤: ${total}\n`);

    if (total === 0) {
      console.log('‚ùå –î–æ–∫—É–º–µ–Ω—Ç –ù–ï –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
      console.log('   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–∞:');
      console.log('   npm run load-sp-pdf  (–∏–ª–∏)  npm run load-sp-txt\n');
      console.log('   –ü–æ–¥—Ä–æ–±–Ω–µ–µ: —Å–º. LOAD_DOCUMENT.md');
    } else {
      console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
      console.log(`   –ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ ${total} —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ —Ç–µ–∫—Å—Ç–∞`);
      console.log('   –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: npm run dev');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message);
    console.log('\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –≤ .env');
    console.log('2. –¢–∞–±–ª–∏—Ü–∞ document_chunks –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ (–∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏)');
    console.log('3. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
  }
}

checkDocument();

