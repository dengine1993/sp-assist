#!/usr/bin/env node
/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ .txt —Ñ–∞–π–ª–æ–≤
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Supabase API
 */

import { createClient } from '@supabase/supabase-js';
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import * as dotenv from 'dotenv';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: join(__dirname, '..', '.env') });
dotenv.config({ path: join(__dirname, '..', '.env.local') });

const COLORS = {
  reset: '\x1b[0m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
};

function log(message, color = 'reset') {
  console.log(`${COLORS[color]}${message}${COLORS.reset}`);
}

async function main() {
  log('\nüîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ .txt —Ñ–∞–π–ª–æ–≤\n', 'cyan');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const supabaseUrl = process.env.VITE_SUPABASE_URL;
  const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || process.env.VITE_SUPABASE_PUBLISHABLE_KEY;

  if (!supabaseUrl || !supabaseKey) {
    log('‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è', 'red');
    log('\n–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º:', 'yellow');
    log('VITE_SUPABASE_URL=https://your-project.supabase.co', 'yellow');
    log('VITE_SUPABASE_ANON_KEY=your-anon-key\n', 'yellow');
    process.exit(1);
  }

  log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã', 'green');
  log(`   URL: ${supabaseUrl}`, 'blue');

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Supabase
  const supabase = createClient(supabaseUrl, supabaseKey);

  log('\nüìä –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', 'cyan');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
    const { data: chunks, error: checkError } = await supabase
      .from('document_chunks')
      .select('id, document_name')
      .limit(1);

    if (checkError) {
      log(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É: ${checkError.message}`, 'yellow');
    } else {
      log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ document_chunks –¥–æ—Å—Ç—É–ø–Ω–∞`, 'green');
      if (chunks && chunks.length > 0) {
        log(`   –ù–∞–π–¥–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ: –µ—Å—Ç—å`, 'blue');
      } else {
        log(`   –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞`, 'blue');
      }
    }
  } catch (error) {
    log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error.message}`, 'yellow');
  }

  log('\nüìù –®–∞–≥ 2: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ SQL –º–∏–≥—Ä–∞—Ü–∏–∏', 'cyan');
  log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —à–∞–≥ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Supabase', 'yellow');
  log('   –ú–∏–≥—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –≤–µ–∫—Ç–æ—Ä–æ–≤ —Å 1536 –Ω–∞ 1024', 'blue');
  
  // –ß–∏—Ç–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
  const migrationPath = join(__dirname, '..', 'supabase', 'migrations', '20251008000000_fix_embedding_dimension.sql');
  
  try {
    const migrationSql = readFileSync(migrationPath, 'utf-8');
    log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω', 'green');
    log(`   –†–∞–∑–º–µ—Ä: ${migrationSql.length} —Å–∏–º–≤–æ–ª–æ–≤`, 'blue');
  } catch (error) {
    log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏: ${error.message}`, 'red');
    process.exit(1);
  }

  log('\n' + '='.repeat(70), 'cyan');
  log('‚ö†Ô∏è  –í–ê–ñ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø', 'yellow');
  log('='.repeat(70), 'cyan');
  log('\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ SQL –º–∏–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Supabase API', 'yellow');
  log('—Ç—Ä–µ–±—É–µ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ SQL Editor –≤ Supabase Dashboard.', 'yellow');
  log('\n–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–∑ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.', 'yellow');
  
  log('\nüìã –ß–¢–û –ù–£–ñ–ù–û –°–î–ï–õ–ê–¢–¨ –í–†–£–ß–ù–£–Æ:\n', 'cyan');
  log('1Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard:', 'green');
  log('   https://supabase.com/dashboard/project/xcfywgwbzisuflngcwme', 'blue');
  
  log('\n2Ô∏è‚É£  –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor:', 'green');
  log('   –õ–µ–≤–æ–µ –º–µ–Ω—é ‚Üí SQL Editor ‚Üí New Query', 'blue');
  
  log('\n3Ô∏è‚É£  –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:', 'green');
  log('   supabase/migrations/20251008000000_fix_embedding_dimension.sql', 'blue');
  
  log('\n4Ô∏è‚É£  –í—Å—Ç–∞–≤—å—Ç–µ –≤ SQL Editor –∏ –Ω–∞–∂–º–∏—Ç–µ Run', 'green');

  log('\n5Ô∏è‚É£  –ù–∞—Å—Ç—Ä–æ–π—Ç–µ JINA_API_KEY:', 'green');
  log('   a) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://jina.ai', 'blue');
  log('   b) –°–æ–∑–¥–∞–π—Ç–µ API –∫–ª—é—á', 'blue');
  log('   c) Supabase Dashboard ‚Üí Settings ‚Üí Edge Functions ‚Üí Secrets', 'blue');
  log('   d) –î–æ–±–∞–≤—å—Ç–µ: Name=JINA_API_KEY, Value=–≤–∞—à_–∫–ª—é—á', 'blue');

  log('\n6Ô∏è‚É£  –ü–µ—Ä–µ—Ä–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ Edge Functions:', 'green');
  log('   Edge Functions ‚Üí process-pdf ‚Üí Redeploy', 'blue');
  log('   Edge Functions ‚Üí chat ‚Üí Redeploy', 'blue');

  log('\n7Ô∏è‚É£  –û—á–∏—Å—Ç–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ (–≤ SQL Editor):', 'green');
  log('   DELETE FROM public.document_chunks;', 'blue');

  log('\n' + '='.repeat(70), 'cyan');

  log('\nüìö –î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Ñ–∞–π–ª–∞—Ö:', 'magenta');
  log('   - –ë–´–°–¢–†–û–ï_–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï.md (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)', 'blue');
  log('   - –ß–ï–ö–õ–ò–°–¢_–ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø.md (–ø–æ—à–∞–≥–æ–≤—ã–π —á–µ–∫–ª–∏—Å—Ç)', 'blue');
  log('   - –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê.md (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)\n', 'blue');

  log('‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ.\n', 'green');
}

main().catch(error => {
  log(`\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}\n`, 'red');
  process.exit(1);
});

