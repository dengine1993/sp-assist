═══════════════════════════════════════════════════════════════════════════
  ПАМЯТКА: Исправление ошибки загрузки .txt файлов  
═══════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────┐
│  ШАГ 1: НАСТРОИТЬ .ENV (2 мин)                                          │
└─────────────────────────────────────────────────────────────────────────┘

  ☐ Открыть файл .env в редакторе
  ☐ Перейти: https://supabase.com/dashboard/project/xcfywgwbzisuflngcwme
  ☐ Settings → API → Project API keys → anon public
  ☐ Скопировать ключ
  ☐ Заменить YOUR_ANON_KEY_HERE на скопированный ключ
  ☐ Сохранить файл
  ☐ Проверить: npm run check-fix

┌─────────────────────────────────────────────────────────────────────────┐
│  ШАГ 2: ПРИМЕНИТЬ SQL МИГРАЦИЮ (5 мин)                                  │
└─────────────────────────────────────────────────────────────────────────┘

  ☐ Открыть Supabase Dashboard
  ☐ SQL Editor → New Query
  ☐ Открыть файл:
    supabase/migrations/20251008000000_fix_embedding_dimension.sql
  ☐ Скопировать весь SQL код
  ☐ Вставить в SQL Editor
  ☐ Нажать Run (или Ctrl+Enter)
  ☐ Убедиться: Success / Query executed successfully

┌─────────────────────────────────────────────────────────────────────────┐
│  ШАГ 3: НАСТРОИТЬ JINA_API_KEY (5 мин)                                  │
└─────────────────────────────────────────────────────────────────────────┘

  3.1 Получить ключ:
    ☐ Перейти: https://jina.ai
    ☐ Зарегистрироваться / Войти
    ☐ Dashboard → API Keys
    ☐ Create API Key
    ☐ Скопировать ключ (формат: jina_...)

  3.2 Добавить в Supabase:
    ☐ Supabase Dashboard
    ☐ Settings → Edge Functions
    ☐ Секция Secrets / Environment Variables
    ☐ Add Secret
    ☐ Name: JINA_API_KEY
    ☐ Value: скопированный ключ
    ☐ Save

  3.3 Переразвернуть функции:
    ☐ Edge Functions → process-pdf → Redeploy
    ☐ Edge Functions → chat → Redeploy
    ☐ Дождаться статуса "deployed"

┌─────────────────────────────────────────────────────────────────────────┐
│  ШАГ 4: ОЧИСТИТЬ СТАРЫЕ ДАННЫЕ (1 мин)                                  │
└─────────────────────────────────────────────────────────────────────────┘

  ☐ SQL Editor → New Query
  ☐ Выполнить: DELETE FROM public.document_chunks;
  ☐ Убедиться: операция выполнена

┌─────────────────────────────────────────────────────────────────────────┐
│  ПРОВЕРКА РАБОТЫ                                                        │
└─────────────────────────────────────────────────────────────────────────┘

  ☐ npm run check-fix (все проверки должны пройти ✅)
  ☐ npm run dev
  ☐ Войти как admin (admin / Chelsea1905)
  ☐ Загрузить тестовый .txt файл
  ☐ Убедиться: "Успешно! Документ загружен"
  ☐ Проверить чат с загруженным документом

═══════════════════════════════════════════════════════════════════════════

ВАЖНЫЕ ССЫЛКИ:

  Supabase Dashboard:
  https://supabase.com/dashboard/project/xcfywgwbzisuflngcwme

  Jina AI:
  https://jina.ai

  Документация проекта:
  ./НАЧНИТЕ_ЗДЕСЬ.md

═══════════════════════════════════════════════════════════════════════════

КОМАНДЫ:

  npm run check-fix    # Проверка статуса
  npm run apply-fix    # Просмотр инструкций
  npm run dev          # Запуск приложения

═══════════════════════════════════════════════════════════════════════════

ТИПИЧНЫЕ ОШИБКИ:

  "JINA_API_KEY is not configured"
  → Повторить Шаг 3, убедиться что ключ добавлен и функции переразвернуты

  "dimension mismatch"
  → Повторить Шаг 2, убедиться что миграция применена полностью

  "rate limit exceeded"
  → Подождать 1-2 минуты, Jina AI имеет лимит запросов

═══════════════════════════════════════════════════════════════════════════

СТАТУС ВЫПОЛНЕНИЯ:

  ☐ Шаг 1 - Настройка .env
  ☐ Шаг 2 - SQL миграция
  ☐ Шаг 3 - JINA_API_KEY
  ☐ Шаг 4 - Очистка данных
  ☐ Проверка работы

  ☐ ✅ ВСЕ ГОТОВО!

═══════════════════════════════════════════════════════════════════════════

Время начала: ______________
Время окончания: ______________

Примечания:




═══════════════════════════════════════════════════════════════════════════
